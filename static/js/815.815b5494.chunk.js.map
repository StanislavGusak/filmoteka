{"version":3,"file":"static/js/815.815b5494.chunk.js","mappings":"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","sources":["webpack://filmoteka/./src/components/Container/Container.module.css?9f71","components/Container/Container.jsx","components/Form/LogInForm/LogInForm.styled.js","components/Form/LogInForm/LogInForm.jsx","pages/LogInPage/LogInPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__WK87Y\"};","import styles from './Container.module.css';\r\n\r\nconst Container = ({children}) => {\r\n    return <div className={styles.container}>{children}</div>;\r\n}\r\n\r\nexport default Container;","import styled from 'styled-components';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\n\r\nexport const FormikStyle = styled(Formik)``;\r\n\r\nexport const FormLogin = styled(Form)`\r\n  max-width: 700px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  padding: 20px;\r\n  background: var(--background-header);\r\n  border: 1px solid var(--border-color);\r\n  gap: 20px;\r\n  border-radius: 5px;\r\n  margin-top: 150px;\r\n`;\r\n\r\nexport const FormLoginTitle = styled.h2`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const FeedbackFormGroup = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nexport const PasswordWrapper = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nexport const ToggleShowPasword = styled.span`\r\n  position: absolute;\r\n  top: 50%;\r\n  right: 10px;\r\n  transform: translate(-50%, -10px);\r\n`;\r\n\r\nexport const InputEmail = styled(Field)`\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  height: 30px;\r\n  padding: 5px;\r\n  background-color: transparent;\r\n  border: 1px solid var(--border-color);\r\n  border-radius: 5px;\r\n  color: var(--color);\r\n  font-size: 18px;\r\n  outline: none;\r\n  &::placeholder {\r\n    opacity: 0.4;\r\n    font-size: 15px;\r\n  }\r\n`;\r\n\r\nexport const InputPassword = styled(Field)`\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  height: 30px;\r\n  padding: 5px;\r\n  background-color: transparent;\r\n  border: 1px solid var(--border-color);\r\n  border-radius: 5px;\r\n  outline: none;\r\n  color: var(--color);\r\n  font-size: 18px;\r\n  &::placeholder {\r\n    opacity: 0.4;\r\n    font-size: 15px;\r\n  }\r\n`;\r\n\r\nexport const StyleErrorMessage = styled(ErrorMessage)``;\r\n\r\nexport const Error = styled.div`\r\n  color: red;\r\n  font-size: 15px;\r\n  margin-top: 10px;\r\n`;\r\n\r\nexport const Btnwrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  gap: 10px;\r\n`;\r\n\r\nexport const BtnLogIn = styled.button`\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100px;\r\n  height: 30px;\r\n  padding: 5px;\r\n  background-color: transparent;\r\n  border: 1px solid var(--border-color);\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  transition: var(--transition);\r\n  &:hover {\r\n    background-color: var(--color);\r\n    border: 1px solid var(--color);\r\n    color: var(--border-color);\r\n  }\r\n`;\r\n\r\nexport const FormPageDescription = styled.p`\r\n  max-width: 800px;\r\n  text-align: center;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 30px;\r\n  color: var(--color);\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n`;","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { BsEye, BsEyeSlash } from 'react-icons/bs';\r\nimport * as yup from 'yup';\r\nimport authOperation from '../../../redux/auth/auth-operation';\r\nimport {\r\n    FormikStyle,\r\n    FormLogin,\r\n    FormLoginTitle,\r\n    FeedbackFormGroup,\r\n    InputEmail,\r\n    InputPassword,\r\n    Btnwrapper,\r\n    BtnLogIn,\r\n    PasswordWrapper,\r\n    ToggleShowPasword,\r\n    FormPageDescription,\r\n    StyleErrorMessage,\r\n    Error,\r\n  } from './LogInForm.styled';\r\n  \r\n  const initialValues = {\r\n    email: '',\r\n    password: '',\r\n  };\r\n  \r\n  const schema = yup.object().shape({\r\n    email: yup.string().required(),\r\n    password: yup.string().min(10).max(20).required(),\r\n  });\r\n  \r\n  function LogInForm() {\r\n    const dispatch = useDispatch();\r\n    const [showPassword, setShowPassword] = useState(false);\r\n  \r\n    const handleSubmit = (values, { resetForm }) => {\r\n      dispatch(authOperation.logIn(values));\r\n      resetForm();\r\n    };\r\n  \r\n    const togglePasswordVisibility = () => {\r\n      setShowPassword(prevShowPassword => !prevShowPassword);\r\n    };\r\n  \r\n    return (\r\n      <>\r\n        <FormikStyle\r\n          initialValues={initialValues}\r\n          validationSchema={schema}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          <FormLogin>\r\n            <FormLoginTitle>Login Form</FormLoginTitle>\r\n            <FeedbackFormGroup>\r\n              <InputEmail type=\"email\" name=\"email\" placeholder=\"email\" />\r\n              <StyleErrorMessage name=\"email\">\r\n                {msg => <Error>{msg}</Error>}\r\n              </StyleErrorMessage>\r\n            </FeedbackFormGroup>\r\n            <FeedbackFormGroup>\r\n              <PasswordWrapper>\r\n                <InputPassword\r\n                  type={showPassword ? 'text' : 'password'}\r\n                  name=\"password\"\r\n                  placeholder=\"password\"\r\n                />\r\n                <ToggleShowPasword onClick={togglePasswordVisibility}>\r\n                  {showPassword ? (\r\n                    <BsEyeSlash color=\"var(--border-color)\" />\r\n                  ) : (\r\n                    <BsEye color=\"var(--border-color)\" />\r\n                  )}\r\n                </ToggleShowPasword>\r\n              </PasswordWrapper>\r\n              <StyleErrorMessage name=\"password\">\r\n                {msg => <Error>{msg}</Error>}\r\n              </StyleErrorMessage>\r\n            </FeedbackFormGroup>\r\n            <Btnwrapper>\r\n              <BtnLogIn type=\"submit\">Log In</BtnLogIn>\r\n            </Btnwrapper>\r\n          </FormLogin>\r\n        </FormikStyle>\r\n        <FormPageDescription>\r\n          Register as a user of our movie library and get access to a special\r\n          library page where you can save your favorite movies to your favorites\r\n          list and add new movies to it. Create your own watchlists and enjoy\r\n          watching movies that are only available to our users. Additionally, as a\r\n          registered user you will be notified of the latest movies and have the\r\n          ability to comment on all movies and view reviews from multiple users.\r\n          Sign up or log in now and start enjoying the best movies!\r\n        </FormPageDescription>\r\n      </>\r\n    );\r\n  }\r\n  export default LogInForm;","import React from 'react';\r\nimport LogInForm from '../../components/Form/LogInForm/LogInForm';\r\nimport Container from '../../components/Container/Container';\r\n\r\nconst LogInPage = () => {\r\n  return (\r\n    <Container>\r\n      <LogInForm />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LogInPage;"],"names":["_ref","children","_jsx","className","styles","FormikStyle","styled","Formik","_templateObject","_taggedTemplateLiteral","FormLogin","Form","_templateObject2","FormLoginTitle","_templateObject3","FeedbackFormGroup","_templateObject4","PasswordWrapper","_templateObject5","ToggleShowPasword","_templateObject6","InputEmail","Field","_templateObject7","InputPassword","_templateObject8","StyleErrorMessage","ErrorMessage","_templateObject9","Error","_templateObject10","Btnwrapper","_templateObject11","BtnLogIn","_templateObject12","FormPageDescription","_templateObject13","initialValues","email","password","schema","yup","shape","required","min","max","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_jsxs","_Fragment","validationSchema","onSubmit","values","resetForm","authOperation","type","name","placeholder","msg","onClick","prevShowPassword","BsEyeSlash","color","BsEye","Container","LogInForm"],"sourceRoot":""}