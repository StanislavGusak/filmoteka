{"version":3,"file":"static/js/676.ce96b0fb.chunk.js","mappings":"0JAEaA,E,QAAUC,GAAAA,OAAaC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,igB,UCQpC,EARiB,WACb,OACIC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIF,EAAAA,EAAAA,KAACJ,EAAO,CAACO,KAAK,SAAQD,SAAC,oBAGnC,C,uDCPA,MAA4B,6B,UCK5B,EAJkB,SAAHE,GAAoB,IAAfF,EAAQE,EAARF,SAChB,OAAOF,EAAAA,EAAAA,KAAA,OAAKK,UAAWC,EAAiBJ,SAAEA,GAC9C,C,8HCFaK,EAAcV,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2GAOxBS,EAAaX,EAAAA,GAAAA,IAAUY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,sDAKvBW,EAAYb,EAAAA,GAAAA,IAAUc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,iIAStBa,EAAYf,EAAAA,GAAAA,GAASgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,qHAQrBe,EAAuBjB,EAAAA,GAAAA,IAAUkB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,oDAKjCiB,EAAWnB,EAAAA,GAAAA,KAAWoB,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,8CAKtBmB,EAAWrB,EAAAA,GAAAA,KAAWsB,IAAAA,GAAApB,EAAAA,EAAAA,GAAA,8CAKtBqB,EAAavB,EAAAA,GAAAA,EAAQwB,IAAAA,GAAAtB,EAAAA,EAAAA,GAAA,yDAKrBuB,EAAezB,EAAAA,GAAAA,KAAW0B,IAAAA,GAAAxB,EAAAA,EAAAA,GAAA,6BAI1ByB,EAAa3B,EAAAA,GAAAA,EAAQ4B,IAAAA,GAAA1B,EAAAA,EAAAA,GAAA,yFAOrB2B,GAAMC,EAAAA,EAAAA,IAAGC,IAAAA,GAAA7B,EAAAA,EAAAA,GAAA,kKAMT8B,GAASF,EAAAA,EAAAA,IAAGG,IAAAA,GAAA/B,EAAAA,EAAAA,GAAA,6LAOZgC,GAAQJ,EAAAA,EAAAA,IAAGK,IAAAA,GAAAjC,EAAAA,EAAAA,GAAA,kLAOXkC,EAAcpC,EAAAA,GAAAA,IAAUqC,IAAAA,GAAAnC,EAAAA,EAAAA,GAAA,ySAW/B2B,EAGAG,EAGAE,G,UC7BN,MAxDA,SAAmB3B,GAAsD,IAAnD+B,EAAW/B,EAAX+B,YAAaC,EAAKhC,EAALgC,MAAOC,EAAYjC,EAAZiC,aAAcC,EAAYlC,EAAZkC,aAC9CC,EAA+B,GAAfF,EAChBG,EAAYC,KAAKC,MAAMH,EAAgB,IAEvCI,EAAcC,MAAMC,KAAK,CAAEC,OAAQ,KAAM,SAACC,EAAGC,GAC/C,OAAIA,EAAIR,GACGxC,EAAAA,EAAAA,KAACgB,EAAQ,CAAAd,SAAmB,UAAO,QAAA+C,OAAZD,KAEvBhD,EAAAA,EAAAA,KAACkB,EAAQ,CAAAhB,SAAmB,UAAO,QAAA+C,OAAZD,GAEtC,IAYME,EAViB,SAAAb,GACnB,OAAIA,GAAgB,EACT,MACAA,EAAe,EACf,SAEA,OAEf,CAEoBc,CAAed,GAC7Be,EAAe,UAAAH,OAAaC,GAElC,OACIlD,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACImD,EAAAA,EAAAA,MAAC9C,EAAW,CAAAL,SAAA,EACRF,EAAAA,EAAAA,KAACQ,EAAU,CAAAN,UACPF,EAAAA,EAAAA,KAACU,EAAS,CACN4C,IACInB,EAAW,mCAAAc,OAC8Bd,GACnC,yCAEVoB,IAAKnB,EACLoB,MAAO,SAGfxD,EAAAA,EAAAA,KAACY,EAAS,CAAAV,SAAEkC,GAAgB,2BAC5BiB,EAAAA,EAAAA,MAACvC,EAAoB,CAAAZ,SAAA,EACjBF,EAAAA,EAAAA,KAACoB,EAAU,CAAAlB,SAAEmC,EAAeM,EAAc,SAC1C3C,EAAAA,EAAAA,KAACiC,EAAW,CAAC5B,UAAW+C,EAAgBlD,UACpCF,EAAAA,EAAAA,KAACsB,EAAY,CAAApB,SACRmC,EAAeA,EAAaoB,QAAQ,GAAK,WAGlDzD,EAAAA,EAAAA,KAACwB,EAAU,CAAAtB,SACNoC,EAAeA,EAAaoB,MAAM,EAAG,GAAK,eAMnE,ECnEA,EAA+B,iCAA/B,EAA+E,iCC4B/E,EAxBmB,SAAHtD,GAAoB,IAAduD,EAAMvD,EAANuD,OACZC,GAAWC,EAAAA,EAAAA,MACjB,OACI7D,EAAAA,EAAAA,KAAA,MAAIK,UAAWC,EAAoBJ,SAC9ByD,EAAOG,KACJ,SAAAC,EAAyDC,GAAK,IAA3DC,EAAEF,EAAFE,GAAI9B,EAAW4B,EAAX5B,YAAaC,EAAK2B,EAAL3B,MAAOC,EAAY0B,EAAZ1B,aAAcC,EAAYyB,EAAZzB,aAAY,OACjDtC,EAAAA,EAAAA,KAAA,MAA2BK,UAAWC,EAAoBJ,UACtDF,EAAAA,EAAAA,KAACkE,EAAAA,GAAI,CAACC,GAAE,WAAAlB,OAAagB,GAAMG,MAAO,CAAEvB,KAAMe,GAAW1D,UACjDF,EAAAA,EAAAA,KAACqE,EAAU,CAEPJ,GAAIA,EACJ9B,YAAaA,EACbC,MAAOA,EACPC,aAAcA,EACdC,aAAcA,GALT2B,MAON,GAAAhB,OAVCgB,EAAE,KAAAhB,OAAIe,GAWb,KAKzB,C,oNCzBaM,E,QAAiBzE,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4J,oBCkFvC,EAvEqB,WAAO,IAADwE,EAAAC,EACvBC,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCd,EAAMgB,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAA8BJ,EAAAA,EAAAA,WAAS,GAAKK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAArCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA0BR,EAAAA,EAAAA,UAAS,MAAKS,GAAAP,EAAAA,EAAAA,GAAAM,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAsCZ,EAAAA,EAAAA,UAAS,GAAEa,GAAAX,EAAAA,EAAAA,GAAAU,EAAA,GAA1CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAAkChB,EAAAA,EAAAA,UAAS,GAAEiB,GAAAf,EAAAA,EAAAA,GAAAc,EAAA,GAAtCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAExBG,EAA+B,QAAvBvB,EAAiB,QAAjBC,GADGX,EAAAA,EAAAA,MACSO,aAAK,IAAAI,OAAA,EAAdA,EAAgB3B,YAAI,IAAA0B,EAAAA,EAAI,IACjCwB,GAAqBC,EAAAA,EAAAA,YAAWC,EAAAA,GAAhCF,iBAmBR,IAjBAG,EAAAA,EAAAA,YAAU,WACNC,EAAAA,EAAAA,qBAC0BX,EAAaO,EAAiBK,WACnDC,MAAK,SAAAjG,GAA+B,IAA5BkG,EAAOlG,EAAPkG,QAASC,EAAWnG,EAAXmG,YACd1B,EAAUyB,GACVT,EAAapD,KAAK+D,IAAID,EAAa,MAEZ,IAAnBD,EAAQxD,QACR2D,EAAAA,GAAAA,MAAY,6CAEpB,IACCC,OAAM,SAAAtB,GACHC,EAASD,EACb,IACCuB,SAAQ,kBAAM1B,GAAW,EAAM,GACxC,GAAG,CAACO,EAAaO,IAEbX,EACA,OAAOpF,EAAAA,EAAAA,KAAA,KAAAE,SAAIkF,EAAMwB,UAUrB,OACI5G,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACImD,EAAAA,EAAAA,MAACwD,EAAAA,EAAS,CAAA3G,SAAA,EACNF,EAAAA,EAAAA,KAACsE,EAAc,CAAApE,SAAC,uBACZF,EAAAA,EAAAA,KAACkE,EAAAA,GAAI,CAACC,GAAI2B,EAAS5F,UACfF,EAAAA,EAAAA,KAAC8G,EAAAA,EAAQ,MAEhB9B,GACGhF,EAAAA,EAAAA,KAAC+G,EAAAA,EAAM,KAEP/G,EAAAA,EAAAA,KAACgH,EAAAA,EAAU,CAACrD,OAAQA,KAExB3D,EAAAA,EAAAA,KAACiH,IAAa,CACVC,UAAWtB,EACXuB,mBAAoB,EACpBC,qBAAsB,EACtBC,aAvBS,SAAHtD,GAAsB,IAAhBuD,EAAQvD,EAARuD,SACpBA,EAAW,EAAI1B,GAGnBH,EAAe6B,EAAW,EAC9B,EAmBgBC,mBAAoB5F,EAAAA,EAAAA,WACpB6F,cAAe7F,EAAAA,EAAAA,KACf8F,gBAAiB9F,EAAAA,EAAAA,OACjB+F,kBAAmB/F,EAAAA,EAAAA,SACnBgG,cAAehG,EAAAA,EAAAA,KACfiG,kBAAmBjG,EAAAA,EAAAA,SACnBkG,eAAgBlG,EAAAA,EAAAA,MAChBmG,cAAe,WACfC,UAAW,OACXC,WAAY,YAKhC,C,qBCjFA,KAAgB,WAAa,+BAA+B,KAAO,yBAAyB,OAAS,2BAA2B,SAAW,6BAA6B,KAAO,yBAAyB,SAAW,6BAA6B,KAAO,yB","sources":["components/BackDown/BackDown.styled.js","components/BackDown/BackDown.jsx","webpack://filmoteka/./src/components/Container/Container.module.css?9f71","components/Container/Container.jsx","components/MoviesItem/MoviesItem.styled.js","components/MoviesItem/MoviesItem.jsx","webpack://filmoteka/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","pages/TopRatedPage/TopRatedPage.styled.js","pages/TopRatedPage/TopRatedPage.jsx","webpack://filmoteka/./src/pages/ActorsPage/ActorsPage.module.css?3c6b"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const BtnBack = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 8px;\r\n  border: 1px solid var(--color);\r\n  font-size: 18px;\r\n  width: 200px;\r\n  height: 50px;\r\n  background-color: transparent;\r\n  color: var(--color);\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  transition: var(--transition);\r\n  cursor: pointer;\r\n  &:hover {\r\n    background: var(--color);\r\n    color: var(--hover-btn);\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    width: 150px;\r\n    height: 50px;\r\n  }\r\n`;","import { BtnBack } from \"./BackDown.styled\";\r\n\r\nconst BackDown = () => {\r\n    return (\r\n        <>\r\n            <BtnBack type=\"button\">&#8678; Go Back</BtnBack>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default BackDown;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__WK87Y\"};","import styles from './Container.module.css';\r\n\r\nconst Container = ({children}) => {\r\n    return <div className={styles.container}>{children}</div>;\r\n}\r\n\r\nexport default Container;","import styled, { css } from 'styled-components';\r\n\r\nexport const CardWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  height: 100%;\r\n`;\r\n\r\nexport const ImgWrapper = styled.div`\r\n  overflow: hidden;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nexport const MoviesImg = styled.img`\r\n  max-width: 100%;\r\n  object-fit: cover;\r\n  transition: transform 0.4s;\r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n\r\nexport const CardTitle = styled.h3`\r\n  max-width: 300px;\r\n  color: var(--color);\r\n  font-size: 14px;\r\n  margin-bottom: 0;\r\n  margin-top: auto;\r\n`;\r\n\r\nexport const RatingStarsContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const GoldStar = styled.span`\r\n  font-size: 10px;\r\n  color: gold;\r\n`;\r\n\r\nexport const GrayStar = styled.span`\r\n  font-size: 10px;\r\n  color: gray;\r\n`;\r\n\r\nexport const RatingText = styled.p`\r\n  color: rgb(36, 35, 35);\r\n  font-size: 10px;\r\n`;\r\n\r\nexport const RatingNumber = styled.span`\r\n  font-size: 8px;\r\n`;\r\n\r\nexport const MoviesYear = styled.p`\r\n  color: red;\r\n  font-weight: bold;\r\n  font-size: 12px;\r\n  margin-left: auto;\r\n`;\r\n\r\nexport const red = css`\r\n  background: #f85032;\r\n  background: -webkit-linear-gradient(to right, #e73827, #f85032);\r\n  background: linear-gradient(to right, #e73827, #f85032);\r\n`;\r\n\r\nexport const yellow = css`\r\n  background: #f7971e;\r\n  background: -webkit-linear-gradient(to right, #ffd200, #f7971e);\r\n  background: linear-gradient(to right, #ffd200, #f7971e);\r\n  color: rgb(36, 35, 35);\r\n`;\r\n\r\nexport const green = css`\r\n  background: #000000;\r\n  background: -webkit-linear-gradient(to right, #0f9b0f, #000000);\r\n  background: linear-gradient(to right, #0f9b0f, #000000);\r\n  color: #fff;\r\n`;\r\n\r\nexport const RatingBlock = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 50%;\r\n  width: 10px;\r\n  heigth: 10px;\r\n  padding: 5px;\r\n  font-weight: bold;\r\n  margin-left: 10px;\r\n  &.rating-red {\r\n    ${red}\r\n  }\r\n  &.rating-yellow {\r\n    ${yellow}\r\n  }\r\n  &.rating-green {\r\n    ${green}\r\n  }\r\n`;","import {\r\n    CardWrapper,\r\n    ImgWrapper,\r\n    MoviesImg,\r\n    CardTitle,\r\n    RatingStarsContainer,\r\n    GoldStar,\r\n    GrayStar,\r\n    RatingText,\r\n    RatingNumber,\r\n    RatingBlock,\r\n    MoviesYear,\r\n} from './MoviesItem.styled';\r\n\r\nfunction MoviesItem({ poster_path, title, vote_average, release_date }) {\r\n    const percentRating = vote_average * 10;\r\n    const goldStars = Math.floor(percentRating / 10); \r\n\r\n    const ratingStars = Array.from({ length: 10 }, (_, i) => {\r\n        if (i < goldStars) {\r\n            return <GoldStar key={`star-${i}`}>&#9733;</GoldStar>;\r\n        } else {\r\n            return <GrayStar key={`star-${i}`}>&#9733;</GrayStar>;\r\n        }\r\n    });\r\n\r\n    const getRatingColor = vote_average => {\r\n        if (vote_average <= 4) {\r\n            return 'red';\r\n        } else if (vote_average < 7) {\r\n            return 'yellow';\r\n        } else {\r\n            return 'green';\r\n        }\r\n    };\r\n\r\n    const ratingColor = getRatingColor(vote_average);\r\n    const ratingClassName = `rating-${ratingColor}`;\r\n\r\n    return (\r\n        <>\r\n            <CardWrapper>\r\n                <ImgWrapper>\r\n                    <MoviesImg\r\n                        src={\r\n                            poster_path\r\n                                ? `https://image.tmdb.org/t/p/w500/${poster_path}`\r\n                                : 'https://dummyimage.com/300x420/fff/aaa'\r\n                        }\r\n                        alt={title}\r\n                        width={300}\r\n                    />\r\n                </ImgWrapper>\r\n                <CardTitle>{title ? title : 'Movie without a title'}</CardTitle>\r\n                <RatingStarsContainer>\r\n                    <RatingText>{vote_average ? ratingStars : 'N/A'}</RatingText>\r\n                    <RatingBlock className={ratingClassName}>\r\n                        <RatingNumber>\r\n                            {vote_average ? vote_average.toFixed(1) : 'N/A'}\r\n                        </RatingNumber>\r\n                    </RatingBlock>\r\n                    <MoviesYear>\r\n                        {release_date ? release_date.slice(0, 4) : 'N/A'}\r\n                    </MoviesYear>\r\n                </RatingStarsContainer>\r\n            </CardWrapper>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MoviesItem;","// extracted by mini-css-extract-plugin\nexport default {\"movies__list\":\"MoviesList_movies__list__iWvbg\",\"movies__item\":\"MoviesList_movies__item__QWC0f\"};","import { Link, useLocation } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport MoviesItem from '../MoviesItem/MoviesItem';\r\nimport styles from './MoviesList.module.css';\r\n\r\nconst MoviesList = ({ movies }) => {\r\n    const location = useLocation();\r\n    return (\r\n        <ul className={styles.movies__list}>\r\n            {movies.map(\r\n                ({ id, poster_path, title, vote_average, release_date }, index) => (\r\n                    <li key={`${id}-${index}`} className={styles.movies__item}>\r\n                        <Link to={`/movies/${id}`} state={{ from: location }}>\r\n                            <MoviesItem\r\n                                key={id}\r\n                                id={id}\r\n                                poster_path={poster_path}\r\n                                title={title}\r\n                                vote_average={vote_average}\r\n                                release_date={release_date}\r\n                            />\r\n                        </Link>\r\n                    </li>\r\n                )\r\n            )}\r\n        </ul>\r\n    )\r\n};\r\n\r\nexport default MoviesList;\r\n\r\nMoviesList.propTypes = {\r\n    movies: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.number.isRequired,\r\n            poster_path: PropTypes.string,\r\n            title: PropTypes.string,\r\n            vote_average: PropTypes.number,\r\n            release_date: PropTypes.string\r\n        })\r\n    ).isRequired,\r\n};","import styled from 'styled-components';\r\n\r\nexport const TitleTopRating = styled.h2`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 100px;\r\n  color: var(--color);\r\n  text-transform: uppercase;\r\n  margin-bottom: 30px;\r\n`;\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport { useLocation, Link } from \"react-router-dom\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { toast } from \"react-toastify\";\r\nimport apiTheMovieDB from \"../../services/kinoApi\";\r\nimport Container from \"../../components/Container/Container\";\r\nimport MoviesList from \"../../components/MoviesList/MoviesList\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport BackDown from \"../../components/BackDown/BackDown\";\r\nimport { LanguageContext } from '../../components/LanguageContext/LanguageContext';\r\nimport { TitleTopRating } from './TopRatedPage.styled';\r\nimport css from '../ActorsPage/ActorsPage.module.css';\r\n\r\nconst TopRatedPage = () => {\r\n    const [movies, setMovies] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [totalPage, setTotalPage] = useState(0);\r\n    const location = useLocation();\r\n    const backLink = location.state?.from ?? '/';\r\n    const { selectedLanguage } = useContext(LanguageContext);\r\n\r\n    useEffect(() => {\r\n        apiTheMovieDB\r\n            .fetchMoviesByRaiting(currentPage, selectedLanguage.iso_639_1)\r\n            .then(({ results, total_pages }) => {\r\n                setMovies(results);\r\n                setTotalPage(Math.min(total_pages, 500));\r\n\r\n                if (results.length === 0) {\r\n                    toast.error(\"sorry, that's all the actors we could find\");\r\n                }\r\n            })\r\n            .catch(error => {\r\n                setError(error);\r\n            })\r\n            .finally(() => setLoading(false));\r\n    }, [currentPage, selectedLanguage]);\r\n\r\n    if (error) {\r\n        return <p>{error.message}</p>\r\n    }\r\n\r\n    const handlePageChange = ({ selected }) => {\r\n        if (selected + 1 > totalPage) {\r\n            return;\r\n        }\r\n        setCurrentPage(selected + 1);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <TitleTopRating>Top rating movies</TitleTopRating>\r\n                    <Link to={backLink}>\r\n                        <BackDown />\r\n                    </Link>\r\n                {loading ? (\r\n                    <Loader />\r\n                ) : (\r\n                    <MoviesList movies={movies} />\r\n                )}\r\n                <ReactPaginate\r\n                    pageCount={totalPage}\r\n                    pageRangeDisplayed={2}\r\n                    marginPagesDisplayed={1}\r\n                    onPageChange={handlePageChange}\r\n                    containerClassName={css.pagination}\r\n                    pageClassName={css.page}\r\n                    activeClassName={css.active}\r\n                    previousClassName={css.previous}\r\n                    nextClassName={css.next}\r\n                    disabledClassName={css.disabled}\r\n                    breakClassName={css.break}\r\n                    previousLabel={'previous'}\r\n                    nextLabel={'next'}\r\n                    breakLabel={'...'}\r\n                />\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TopRatedPage;","// extracted by mini-css-extract-plugin\nexport default {\"pagination\":\"ActorsPage_pagination__AJF69\",\"page\":\"ActorsPage_page__IpdFI\",\"active\":\"ActorsPage_active__wAtHB\",\"previous\":\"ActorsPage_previous__OZpAL\",\"next\":\"ActorsPage_next__lcDC2\",\"disabled\":\"ActorsPage_disabled__aSJEb\",\"icon\":\"ActorsPage_icon__estx4\"};"],"names":["BtnBack","styled","_templateObject","_taggedTemplateLiteral","_jsx","_Fragment","children","type","_ref","className","styles","CardWrapper","ImgWrapper","_templateObject2","MoviesImg","_templateObject3","CardTitle","_templateObject4","RatingStarsContainer","_templateObject5","GoldStar","_templateObject6","GrayStar","_templateObject7","RatingText","_templateObject8","RatingNumber","_templateObject9","MoviesYear","_templateObject10","red","css","_templateObject11","yellow","_templateObject12","green","_templateObject13","RatingBlock","_templateObject14","poster_path","title","vote_average","release_date","percentRating","goldStars","Math","floor","ratingStars","Array","from","length","_","i","concat","ratingColor","getRatingColor","ratingClassName","_jsxs","src","alt","width","toFixed","slice","movies","location","useLocation","map","_ref2","index","id","Link","to","state","MoviesItem","TitleTopRating","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","_useState7","_useState8","currentPage","setCurrentPage","_useState9","_useState10","totalPage","setTotalPage","backLink","selectedLanguage","useContext","LanguageContext","useEffect","apiTheMovieDB","iso_639_1","then","results","total_pages","min","toast","catch","finally","message","Container","BackDown","Loader","MoviesList","ReactPaginate","pageCount","pageRangeDisplayed","marginPagesDisplayed","onPageChange","selected","containerClassName","pageClassName","activeClassName","previousClassName","nextClassName","disabledClassName","breakClassName","previousLabel","nextLabel","breakLabel"],"sourceRoot":""}