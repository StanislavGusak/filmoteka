{"version":3,"file":"static/js/35.8bf70b0c.chunk.js","mappings":"0PAEaA,EAAWC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uIASpBC,EAAWH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,2QAYpBG,EAAWL,EAAAA,GAAAA,EAAQM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,kC,UCyChC,EAzDkB,WACd,IAAQK,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAAkCL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAzCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA0BT,EAAAA,EAAAA,UAAS,MAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACdG,GAAqBC,EAAAA,EAAAA,YAAWC,EAAAA,GAAhCF,iBAgBR,OAdAG,EAAAA,EAAAA,YAAU,WACNR,GAAa,GACbS,EAAAA,EAAAA,kBACuBpB,EAASgB,EAAiBK,WAC5CC,MAAK,SAAAC,GACFhB,EAAQgB,EAAKjB,MACbK,GAAa,EACjB,IACCa,OAAM,SAAAV,GACHC,EAASD,GACTH,GAAa,EACjB,GACR,GAAG,CAACX,EAASgB,IAETN,GACOe,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IAGdZ,GACOW,EAAAA,EAAAA,KAAA,KAAAE,SAAIb,EAAMc,WAIjBH,EAAAA,EAAAA,KAAAI,EAAAA,SAAA,CAAAF,UACIF,EAAAA,EAAAA,KAACjC,EAAQ,CAAAmC,SACJrB,GAAQA,EAAKwB,OAAS,EACnBxB,EAAKyB,KAAI,SAAAC,GAAA,IAAGC,EAAYD,EAAZC,aAAcC,EAAIF,EAAJE,KAAMC,EAAEH,EAAFG,GAAE,OAC9BV,EAAAA,EAAAA,KAACW,EAAAA,GAAI,CAACC,GAAE,kBAAAC,OAAoBH,EAAE,gBAAeR,UACzCY,EAAAA,EAAAA,MAAC3C,EAAQ,CAAA+B,SAAA,EACLF,EAAAA,EAAAA,KAAA,OACIe,IACIP,EAAY,mCAAAK,OAC6BL,GACnC,sCAEVQ,IAAKP,EACLQ,MAAO,OAEXjB,EAAAA,EAAAA,KAAC3B,EAAQ,CAAA6B,SAAEO,MAVAC,IADgCA,EAa5C,KAGXV,EAAAA,EAAAA,KAAA,KAAAE,SAAG,6BAKvB,C","sources":["components/Cast/CastMovie.styled.js","components/Cast/CastMovie.jsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const CastList = styled.ul`\r\n  margin-top: 20px;\r\n  margin-bottom: 50px;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  gap: 15px;\r\n`;\r\n\r\nexport const CastItem = styled.li`\r\n  border: 1px solid var(--border-color);\r\n  max-width: 220px;\r\n  padding: 10px;\r\n  background: var(--background-header);\r\n  border-radius: 5px;\r\n  -webkit-border-radius: 5px;\r\n  -moz-border-radius: 5px;\r\n  -ms-border-radius: 5px;\r\n  -o-border-radius: 5px;\r\n`;\r\n\r\nexport const CastName = styled.p`\r\n  color: var(--color);\r\n`;","import { useEffect, useState, useContext } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport apiTheMovieDB from '../../services/kinoApi';\r\nimport { LanguageContext } from '../LanguageContext/LanguageContext';\r\nimport Loader from '../Loader/Loader';\r\nimport { CastList, CastItem, CastName } from './CastMovie.styled';\r\n\r\nconst CastMovie = () => {\r\n    const { movieId } = useParams();\r\n    const [cast, setCast] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const { selectedLanguage } = useContext(LanguageContext);\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        apiTheMovieDB\r\n            .fetchMovieCredits(movieId, selectedLanguage.iso_639_1)\r\n            .then(data => {\r\n                setCast(data.cast);\r\n                setIsLoading(false);\r\n            })\r\n            .catch(error => {\r\n                setError(error);\r\n                setIsLoading(false);\r\n            });\r\n    }, [movieId, selectedLanguage]);\r\n\r\n    if (isLoading) {\r\n        return <Loader />;\r\n    }\r\n\r\n    if (error) {\r\n        return <p>{error.message}</p>;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CastList>\r\n                {cast && cast.length > 0 ? (\r\n                    cast.map(({ profile_path, name, id }) => (\r\n                        <Link to={`/actors/movies/${id}/actors-info`} key={id}>\r\n                            <CastItem key={id}>\r\n                                <img\r\n                                    src={\r\n                                        profile_path\r\n                                            ? `https://image.tmdb.org/t/p/w500/${profile_path}`\r\n                                            : 'https://via.placeholder.com/200x300'\r\n                                    }\r\n                                    alt={name}\r\n                                    width={200}\r\n                                />\r\n                                <CastName>{name}</CastName>\r\n                            </CastItem>\r\n                        </Link>\r\n                    ))\r\n                ) : (\r\n                    <p>No cast members found</p>\r\n                )}\r\n            </CastList>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CastMovie;"],"names":["CastList","styled","_templateObject","_taggedTemplateLiteral","CastItem","_templateObject2","CastName","_templateObject3","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","selectedLanguage","useContext","LanguageContext","useEffect","apiTheMovieDB","iso_639_1","then","data","catch","_jsx","Loader","children","message","_Fragment","length","map","_ref","profile_path","name","id","Link","to","concat","_jsxs","src","alt","width"],"sourceRoot":""}