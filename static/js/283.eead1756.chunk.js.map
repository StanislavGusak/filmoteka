{"version":3,"file":"static/js/283.eead1756.chunk.js","mappings":"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","sources":["components/BackDown/BackDown.styled.js","components/BackDown/BackDown.jsx","webpack://filmoteka/./src/components/Container/Container.module.css?9f71","components/Container/Container.jsx","pages/FavouritePage/FavouritePage.styled.js","pages/FavouritePage/FavouritePage.jsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const BtnBack = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 8px;\r\n  border: 1px solid var(--color);\r\n  font-size: 18px;\r\n  width: 200px;\r\n  height: 50px;\r\n  background-color: transparent;\r\n  color: var(--color);\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  transition: var(--transition);\r\n  cursor: pointer;\r\n  &:hover {\r\n    background: var(--color);\r\n    color: var(--hover-btn);\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    width: 150px;\r\n    height: 50px;\r\n  }\r\n`;","import { BtnBack } from \"./BackDown.styled\";\r\n\r\nconst BackDown = () => {\r\n    return (\r\n        <>\r\n            <BtnBack type=\"button\">&#8678; Go Back</BtnBack>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default BackDown;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__WK87Y\"};","import styles from './Container.module.css';\r\n\r\nconst Container = ({children}) => {\r\n    return <div className={styles.container}>{children}</div>;\r\n}\r\n\r\nexport default Container;","import styled, { css } from 'styled-components';\r\n\r\nexport const LibrarryTitle = styled.h1`\r\n  margin-top: 100px;\r\n  margin-bottom: 30px;\r\n  font-size: 24px;\r\n  color: var(--color);\r\n  display: flex;\r\n  justify-content: center;\r\n  text-transform: uppercase;\r\n`;\r\n\r\nexport const FavoritesList = styled.ul`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n  margin-top: 30px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const FavoritesItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  border: 1px solid var(--border-color);\r\n  border-radius: 5px;\r\n  max-width: 320px;\r\n  padding: 10px;\r\n  background: var(--background-movies-item);\r\n`;\r\n\r\nexport const ImgWrapper = styled.div`\r\n  overflow: hidden;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nexport const MoviesImg = styled.img`\r\n  max-width: 100%;\r\n  object-fit: cover;\r\n  transition: transform 0.4s;\r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n\r\nexport const CardTitle = styled.h3`\r\n  max-width: 300px;\r\n  color: var(--color);\r\n  font-size: 14px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const RatingStarsContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const red = css`\r\n  background: #f85032;\r\n  background: -webkit-linear-gradient(to right, #e73827, #f85032);\r\n  background: linear-gradient(to right, #e73827, #f85032);\r\n`;\r\n\r\nexport const yellow = css`\r\n  background: #f7971e;\r\n  background: -webkit-linear-gradient(to right, #ffd200, #f7971e);\r\n  background: linear-gradient(to right, #ffd200, #f7971e);\r\n  color: rgb(36, 35, 35);\r\n`;\r\n\r\nexport const green = css`\r\n  background: #000000;\r\n  background: -webkit-linear-gradient(to right, #0f9b0f, #000000);\r\n  background: linear-gradient(to right, #0f9b0f, #000000);\r\n  color: #fff;\r\n`;\r\n\r\nexport const ExpextedRating = styled.p`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 50%;\r\n  width: 10px;\r\n  height: 10px;\r\n  padding: 5px;\r\n  font-weight: bold;\r\n  font-size: 8px;\r\n\r\n  &.rating-red {\r\n    ${red}\r\n  }\r\n  &.rating-yellow {\r\n    ${yellow}\r\n  }\r\n  &.rating-green {\r\n    ${green}\r\n  }\r\n`;\r\n\r\nexport const MoviesYear = styled.p`\r\n  color: red;\r\n  font-weight: bold;\r\n  font-size: 12px;\r\n  margin-left: auto;\r\n`;","import { useState, useEffect } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport Container from '../../components/Container/Container';\r\nimport BackDown from '../../components/BackDown/BackDown';\r\nimport {\r\n    LibrarryTitle,\r\n    FavoritesList,\r\n    FavoritesItem,\r\n    ImgWrapper,\r\n    MoviesImg,\r\n    CardTitle,\r\n    RatingStarsContainer,\r\n    MoviesYear,\r\n    ExpextedRating,\r\n} from './FavouritePage.styled';\r\n\r\nconst LibraryPage = () => {\r\n    const [favoritesList, setFavoritesList] = useState([]);\r\n    const location = useLocation();\r\n    const backLink = location.state?.from ?? '/';\r\n\r\n    useEffect(() => {\r\n        const favorites = JSON.parse(localStorage.getItem('favorites'));\r\n        setFavoritesList(favorites || []);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <LibrarryTitle>Favourites</LibrarryTitle>\r\n                <Link to={backLink}>\r\n                    <BackDown />\r\n                </Link>\r\n                <FavoritesList>\r\n                    {favoritesList.map(\r\n                        ({ id, poster_path, title, vote_average, release_date }) => {\r\n                            const getRatingColor = () => {\r\n                                if (vote_average <= 4) {\r\n                                    return 'red';\r\n                                } else if (vote_average < 7) {\r\n                                    return 'yellow';\r\n                                } else {\r\n                                    return 'green';\r\n                                }\r\n                            };\r\n                            const ratingColor = getRatingColor();\r\n                            const ratingClassName = `rating-${ratingColor}`;\r\n                            return (\r\n                                <Link to={`/movies/${id}`} state={{ from: location }} key={id}>\r\n                                    <FavoritesItem key={id}>\r\n                                        <ImgWrapper>\r\n                                            <MoviesImg\r\n                                                src={\r\n                                                    poster_path\r\n                                                        ? `https://image.tmdb.org/t/p/w500/${poster_path}`\r\n                                                        : 'https://via.placeholder.com/300x420'\r\n                                                }\r\n                                                alt={title}\r\n                                                width={300}\r\n                                            />\r\n                                        </ImgWrapper>\r\n                                        <CardTitle>\r\n                                            {title ? title : 'Movie without a title'}\r\n                                        </CardTitle>\r\n                                        <RatingStarsContainer>\r\n                                            <ExpextedRating className={ratingClassName}>\r\n                                                {typeof vote_average === 'number'\r\n                                                    ? vote_average.toFixed(1)\r\n                                                    : 'N/A'}\r\n                                            </ExpextedRating>\r\n                                            <MoviesYear>\r\n                                                {release_date ? release_date : 'N/A'}\r\n                                            </MoviesYear>\r\n                                        </RatingStarsContainer>\r\n                                    </FavoritesItem>\r\n                                </Link>\r\n                            )\r\n                        }\r\n                    )}\r\n                </FavoritesList>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LibraryPage;"],"names":["BtnBack","styled","_templateObject","_taggedTemplateLiteral","_jsx","_Fragment","children","type","_ref","className","styles","LibrarryTitle","FavoritesList","_templateObject2","FavoritesItem","_templateObject3","ImgWrapper","_templateObject4","MoviesImg","_templateObject5","CardTitle","_templateObject6","RatingStarsContainer","_templateObject7","red","css","_templateObject8","yellow","_templateObject9","green","_templateObject10","ExpextedRating","_templateObject11","MoviesYear","_templateObject12","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","favoritesList","setFavoritesList","location","useLocation","backLink","state","from","useEffect","favorites","JSON","parse","localStorage","getItem","_jsxs","Container","Link","to","BackDown","map","id","poster_path","title","vote_average","release_date","ratingClassName","concat","src","alt","width","toFixed"],"sourceRoot":""}