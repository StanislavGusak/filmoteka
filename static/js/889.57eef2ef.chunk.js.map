{"version":3,"file":"static/js/889.57eef2ef.chunk.js","mappings":"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","sources":["components/BackDown/BackDown.styled.js","components/BackDown/BackDown.jsx","webpack://filmoteka/./src/components/Container/Container.module.css?9f71","components/Container/Container.jsx","components/MoviesItem/MoviesItem.styled.js","components/MoviesItem/MoviesItem.jsx","webpack://filmoteka/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","pages/ActorsMoviePage/ActorsMoviePage.styled.js","pages/ActorsMoviePage/ActorsMoviePage.jsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const BtnBack = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 8px;\r\n  border: 1px solid var(--color);\r\n  font-size: 18px;\r\n  width: 200px;\r\n  height: 50px;\r\n  background-color: transparent;\r\n  color: var(--color);\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  transition: var(--transition);\r\n  cursor: pointer;\r\n  &:hover {\r\n    background: var(--color);\r\n    color: var(--hover-btn);\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    width: 150px;\r\n    height: 50px;\r\n  }\r\n`;","import { BtnBack } from \"./BackDown.styled\";\r\n\r\nconst BackDown = () => {\r\n    return (\r\n        <>\r\n            <BtnBack type=\"button\">&#8678; Go Back</BtnBack>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default BackDown;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__WK87Y\"};","import styles from './Container.module.css';\r\n\r\nconst Container = ({children}) => {\r\n    return <div className={styles.container}>{children}</div>;\r\n}\r\n\r\nexport default Container;","import styled, { css } from 'styled-components';\r\n\r\nexport const CardWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  height: 100%;\r\n`;\r\n\r\nexport const ImgWrapper = styled.div`\r\n  overflow: hidden;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nexport const MoviesImg = styled.img`\r\n  max-width: 100%;\r\n  object-fit: cover;\r\n  transition: transform 0.4s;\r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n\r\nexport const CardTitle = styled.h3`\r\n  max-width: 300px;\r\n  color: var(--color);\r\n  font-size: 14px;\r\n  margin-bottom: 0;\r\n  margin-top: auto;\r\n`;\r\n\r\nexport const RatingStarsContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const GoldStar = styled.span`\r\n  font-size: 10px;\r\n  color: gold;\r\n`;\r\n\r\nexport const GrayStar = styled.span`\r\n  font-size: 10px;\r\n  color: gray;\r\n`;\r\n\r\nexport const RatingText = styled.p`\r\n  color: rgb(36, 35, 35);\r\n  font-size: 10px;\r\n`;\r\n\r\nexport const RatingNumber = styled.span`\r\n  font-size: 8px;\r\n`;\r\n\r\nexport const MoviesYear = styled.p`\r\n  color: red;\r\n  font-weight: bold;\r\n  font-size: 12px;\r\n  margin-left: auto;\r\n`;\r\n\r\nexport const red = css`\r\n  background: #f85032;\r\n  background: -webkit-linear-gradient(to right, #e73827, #f85032);\r\n  background: linear-gradient(to right, #e73827, #f85032);\r\n`;\r\n\r\nexport const yellow = css`\r\n  background: #f7971e;\r\n  background: -webkit-linear-gradient(to right, #ffd200, #f7971e);\r\n  background: linear-gradient(to right, #ffd200, #f7971e);\r\n  color: rgb(36, 35, 35);\r\n`;\r\n\r\nexport const green = css`\r\n  background: #000000;\r\n  background: -webkit-linear-gradient(to right, #0f9b0f, #000000);\r\n  background: linear-gradient(to right, #0f9b0f, #000000);\r\n  color: #fff;\r\n`;\r\n\r\nexport const RatingBlock = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 50%;\r\n  width: 10px;\r\n  heigth: 10px;\r\n  padding: 5px;\r\n  font-weight: bold;\r\n  margin-left: 10px;\r\n  &.rating-red {\r\n    ${red}\r\n  }\r\n  &.rating-yellow {\r\n    ${yellow}\r\n  }\r\n  &.rating-green {\r\n    ${green}\r\n  }\r\n`;","import {\r\n    CardWrapper,\r\n    ImgWrapper,\r\n    MoviesImg,\r\n    CardTitle,\r\n    RatingStarsContainer,\r\n    GoldStar,\r\n    GrayStar,\r\n    RatingText,\r\n    RatingNumber,\r\n    RatingBlock,\r\n    MoviesYear,\r\n} from './MoviesItem.styled';\r\n\r\nfunction MoviesItem({ poster_path, title, vote_average, release_date }) {\r\n    const percentRating = vote_average * 10;\r\n    const goldStars = Math.floor(percentRating / 10); \r\n\r\n    const ratingStars = Array.from({ length: 10 }, (_, i) => {\r\n        if (i < goldStars) {\r\n            return <GoldStar key={`star-${i}`}>&#9733;</GoldStar>;\r\n        } else {\r\n            return <GrayStar key={`star-${i}`}>&#9733;</GrayStar>;\r\n        }\r\n    });\r\n\r\n    const getRatingColor = vote_average => {\r\n        if (vote_average <= 4) {\r\n            return 'red';\r\n        } else if (vote_average < 7) {\r\n            return 'yellow';\r\n        } else {\r\n            return 'green';\r\n        }\r\n    };\r\n\r\n    const ratingColor = getRatingColor(vote_average);\r\n    const ratingClassName = `rating-${ratingColor}`;\r\n\r\n    return (\r\n        <>\r\n            <CardWrapper>\r\n                <ImgWrapper>\r\n                    <MoviesImg\r\n                        src={\r\n                            poster_path\r\n                                ? `https://image.tmdb.org/t/p/w500/${poster_path}`\r\n                                : 'https://dummyimage.com/300x420/fff/aaa'\r\n                        }\r\n                        alt={title}\r\n                        width={300}\r\n                    />\r\n                </ImgWrapper>\r\n                <CardTitle>{title ? title : 'Movie without a title'}</CardTitle>\r\n                <RatingStarsContainer>\r\n                    <RatingText>{vote_average ? ratingStars : 'N/A'}</RatingText>\r\n                    <RatingBlock className={ratingClassName}>\r\n                        <RatingNumber>\r\n                            {vote_average ? vote_average.toFixed(1) : 'N/A'}\r\n                        </RatingNumber>\r\n                    </RatingBlock>\r\n                    <MoviesYear>\r\n                        {release_date ? release_date.slice(0, 4) : 'N/A'}\r\n                    </MoviesYear>\r\n                </RatingStarsContainer>\r\n            </CardWrapper>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MoviesItem;","// extracted by mini-css-extract-plugin\nexport default {\"movies__list\":\"MoviesList_movies__list__iWvbg\",\"movies__item\":\"MoviesList_movies__item__QWC0f\"};","import { Link, useLocation } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport MoviesItem from '../MoviesItem/MoviesItem';\r\nimport styles from './MoviesList.module.css';\r\n\r\nconst MoviesList = ({ movies }) => {\r\n    const location = useLocation();\r\n    return (\r\n        <ul className={styles.movies__list}>\r\n            {movies.map(\r\n                ({ id, poster_path, title, vote_average, release_date }, index) => (\r\n                    <li key={`${id}-${index}`} className={styles.movies__item}>\r\n                        <Link to={`/movies/${id}`} state={{ from: location }}>\r\n                            <MoviesItem\r\n                                key={id}\r\n                                id={id}\r\n                                poster_path={poster_path}\r\n                                title={title}\r\n                                vote_average={vote_average}\r\n                                release_date={release_date}\r\n                            />\r\n                        </Link>\r\n                    </li>\r\n                )\r\n            )}\r\n        </ul>\r\n    )\r\n};\r\n\r\nexport default MoviesList;\r\n\r\nMoviesList.propTypes = {\r\n    movies: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.number.isRequired,\r\n            poster_path: PropTypes.string,\r\n            title: PropTypes.string,\r\n            vote_average: PropTypes.number,\r\n            release_date: PropTypes.string\r\n        })\r\n    ).isRequired,\r\n};","import styled from 'styled-components';\r\n\r\nexport const BtnBackWrapper = styled.div`\r\n  margin-top: 100px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nexport const ActorsMoviesTitle = styled.h2`\r\n  margin-bottom: 20px;\r\n  text-transform: uppercase;\r\n  text-align: center;\r\n  color: var(--color);\r\n  font-size: 21px;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const ActorsMoreInfo = styled.h3`\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  color: var(--color);\r\n  transition: color var(--transition);\r\n  cursor: pointer;\r\n  &:hover {\r\n    text-decoration: underline;\r\n    color: var(--border-color);\r\n  }\r\n`;","import { useState, useEffect, Suspense } from \"react\";\r\nimport {\r\n    Link,\r\n    useParams,\r\n    useLocation,\r\n    Outlet,\r\n} from 'react-router-dom';\r\nimport { toast } from \"react-toastify\";\r\nimport apiTheMovieDB from \"../../services/kinoApi\";\r\nimport Container from \"../../components/Container/Container\";\r\nimport MoviesList from \"../../components/MoviesList/MoviesList\";\r\nimport BackDown from \"../../components/BackDown/BackDown\";\r\nimport {\r\n    BtnBackWrapper,\r\n    ActorsMoviesTitle,\r\n    ActorsMoreInfo,\r\n} from './ActorsMoviePage.styled';\r\n\r\nconst ActorsMoviesPage = () => {\r\n    const { id } = useParams();\r\n    const [movies, setMovies] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        apiTheMovieDB\r\n            .fetchMoviesByActors(id)\r\n            .then(movies => {\r\n                setMovies(movies);\r\n                if (movies.length === 0) {\r\n                    toast.error(\"sorry, that's all the actors we could find\");\r\n                }\r\n            })\r\n            .catch(error => {\r\n                setError(error)\r\n            })\r\n            .finally(setLoading(false));\r\n    }, [id]);\r\n\r\n    if (error) {\r\n        return <p>{error.message}</p>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <BtnBackWrapper>\r\n                    <Link to={'/movie/actors/'}>\r\n                        <BackDown />\r\n                    </Link>\r\n                </BtnBackWrapper>\r\n                <ActorsMoviesTitle>Actors info and movies</ActorsMoviesTitle>\r\n                <Link to={`/actors/movies/${id}/actors-info`} state={location.state}>\r\n                    <ActorsMoreInfo>\r\n                        See more information about the actor...\r\n                    </ActorsMoreInfo>\r\n                </Link>\r\n                <Suspense>\r\n                    <Outlet />\r\n                </Suspense>\r\n                {loading ? (\r\n                    <p>Loading...</p>\r\n                ) : (\r\n                    <MoviesList movies={movies} />\r\n                )}\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ActorsMoviesPage;"],"names":["BtnBack","styled","_templateObject","_taggedTemplateLiteral","_jsx","_Fragment","children","type","_ref","className","styles","CardWrapper","ImgWrapper","_templateObject2","MoviesImg","_templateObject3","CardTitle","_templateObject4","RatingStarsContainer","_templateObject5","GoldStar","_templateObject6","GrayStar","_templateObject7","RatingText","_templateObject8","RatingNumber","_templateObject9","MoviesYear","_templateObject10","red","css","_templateObject11","yellow","_templateObject12","green","_templateObject13","RatingBlock","_templateObject14","poster_path","title","vote_average","release_date","percentRating","goldStars","Math","floor","ratingStars","Array","from","length","_","i","concat","ratingColor","getRatingColor","ratingClassName","_jsxs","src","alt","width","toFixed","slice","movies","location","useLocation","map","_ref2","index","id","Link","to","state","MoviesItem","BtnBackWrapper","ActorsMoviesTitle","ActorsMoreInfo","useParams","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","useEffect","apiTheMovieDB","then","toast","catch","finally","message","Container","BackDown","Suspense","Outlet","MoviesList"],"sourceRoot":""}